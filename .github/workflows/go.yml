name: Go
on: [push]
jobs:
  bootstrap-checkout:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        id: cache-autonity-code
        env:
          cache-name: cache-autonity-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-aut-${{ env.cache-name }}-${{ github.sha }}

      - uses: actions/checkout@v2
        if: steps.cache-autonity-code.outputs.cache-hit != 'true'
        with:
          clean: 'false'

      - name: Embed Autonity contract
        if:  steps.cache-autonity-code.outputs.cache-hit != 'true'
        run: make embed-autonity-contract

  docker_e2e_test:
    needs: bootstrap-checkout
    runs-on: [self-hosted, linux, x64]
    if: github.ref == 'refs/heads/start_stop_nodes_docker_test'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-autonity-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-aut-${{ env.cache-name }}-${{ github.sha }}

      - uses: actions/checkout@v2
        if: steps.cache-autonity-code.outputs.cache-hit != 'true'
        with:
          clean: 'false'

      - name: Build
        run: make all

      - name: docker_e2e_test
        run: cd docker_e2e_test && make install-prerequisites-linux && make docker-e2e-tests
